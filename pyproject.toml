[project]
name = "pelican-jsmin"
version = "0.0.1"
description = "Pelican plugin to provide jsmin filter"
authors = [
    { name = "Raphael Boidol", email = "boidolr@users.noreply.github.com" },
]
license = { text = "MIT" }
readme = "README.md"
keywords = ["pelican", "plugin", "rjsmin", "jsmin"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Framework :: Pelican",
    "Framework :: Pelican :: Plugins",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT",
    "Operating System :: OS Independent",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8.1,<4.0"
dependencies = ["pelican>=4.5", "rjsmin>=1.2.2"]

[project.urls]
Homepage = "https://github.com/boidolr/pelican-jsmin"
"Issue Tracker" = "https://github.com/boidolr/pelican-jsmin/issues"

[project.optional-dependencies]
markdown = ["markdown>=3.4"]

[tool.pdm]

[tool.pdm.dev-dependencies]
lint = ["invoke>=2.2", "ruff>=0.3.7,<0.5.0"]
test = ["markdown>=3.4", "pytest>=7.0", "pytest-cov>=4.0", "pytest-sugar>=1.0"]

[tool.pdm.build]
source-includes = []
includes = ["pelican/"]
excludes = ["**/.DS_Store", "**/test_data/**", "tasks.py"]

[tool.autopub]
project-name = "jsmin"
git-username = "botpub"
git-email = "52496925+botpub@users.noreply.github.com"
append-github-contributor = true

[tool.ruff.lint]
select = [
    "B",   # flake8-bugbear
    "BLE", # flake8-blind-except
    "C4",  # flake8-comprehensions
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "PGH", # pygrep-hooks
    "PL",  # pylint
    "RET", # flake8-return
    "RUF", # ruff-specific rules
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "T20", # flake8-print
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP",  # pyupgrade
    "W",   # pycodestyle
    "YTT", # flake8-2020
]

ignore = [
    "D100", # missing docstring in public module
    "D104", # missing docstring in public package
    "D203", # blank line before class docstring
    "D213", # multi-line docstring summary should start at the second line
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["pelican"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
